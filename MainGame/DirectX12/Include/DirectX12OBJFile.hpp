//////////////////////////////////////////////////////////////////////////////////
///             @file   DirectX12OBJFile.hpp
///             @brief  Obj File
///             @author Toide Yutaro
///             @date   2020_12_
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef DIRECTX12_OBJ_FILE_HPP
#define DIRECTX12_OBJ_FILE_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include <DirectXMath.h>
#include "DirectX12ModelFile.hpp"
#include <Windows.h>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

/****************************************************************************
*				  			ObjFile
*************************************************************************//**
*  @class     ObjFile
*  @brief     Obj File Loader
*****************************************************************************/
class OBJData final : public ModelData
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	void Load3DModel(const std::wstring& filePath) override;

#pragma region Property
	UINT32 GetVertexCount()   override;
	UINT32 GetIndexCount()    override;
	UINT32 GetMaterialCount() override;
#pragma endregion Property
	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/

	/****************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/
};
#endif
