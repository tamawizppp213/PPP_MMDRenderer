//////////////////////////////////////////////////////////////////////////////////
///             @file   Text.hpp
///             @brief  Text 
///             @author Toide Yutaro
///             @date   2021_02_09
//////////////////////////////////////////////////////////////////////////////////
#pragma once 
#ifndef TEXT_HPP
#define TEXT_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameMath/Include/GMMatrix.hpp"
#include <string>

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                             Struct
//////////////////////////////////////////////////////////////////////////////////
struct TextString
{
	std::wstring      String;
	gm::Float2        SizePerChar;
	gm::Float3        StartPosition; // rect left upper point
	float             Space;

	TextString(std::wstring string, const gm::Float2& sizePerChar, const gm::Float3& startPosition, float space)
	{
		String        = string;
		SizePerChar   = sizePerChar;
		StartPosition = startPosition;
		Space         = space;
	}
	TextString() = default;
};

struct TextNumber
{
	UINT              Number;
	INT               Digit;
	gm::Float2        SizePerDigit;  // 0 ~ 1
	gm::Float3        StartPosition; // rect left upper point
	float             Space;         // 0 ~ 1
};

#endif