//////////////////////////////////////////////////////////////////////////////////
///             @file   GamePad.hpp
///             @brief  GamePad
///             @author Toide Yutaro
///             @date   2020_11_
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef GAMEPAD_HPP
#define GAMEPAD_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                         DirectX12 Shader Function (inline)
//////////////////////////////////////////////////////////////////////////////////

#pragma region GamePad
/****************************************************************************
*				  			TemplateClass
*************************************************************************//**
*  @class     GamePad
*  @brief     GamePad
*****************************************************************************/
class GamePad
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/

	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/

	/****************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
	GamePad() {};
	GamePad(const GamePad&)            = default;
	GamePad& operator=(const GamePad&) = default;
	GamePad(GamePad&&)                 = default;
	GamePad& operator=(GamePad&&)      = default;
	~GamePad() {};
private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/
};

#endif
