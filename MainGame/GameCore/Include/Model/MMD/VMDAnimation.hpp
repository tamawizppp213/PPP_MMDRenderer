//////////////////////////////////////////////////////////////////////////////////
///             @file   VMDAnimation.hpp
///             @brief  VMD Animation
///             @author Toide Yutaro
///             @date   2021_08_31
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef VMD_ANIMATION_HPP
#define VMD_ANIMATION_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "VMDFile.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
class VMDBezier
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	static void EasingKeyFrame(float time, VMDKeyFrame& keyFrame, float& rotationRatio, gm::Vector3& translationRatio); 
	static float GetYFromXOnBezier(float x, const gm::Float4& controlPoints, UINT8 loop = 12);
	/****************************************************************************
	**                Private Function
	*****************************************************************************/
private:
	
};

/****************************************************************************
*				  			VMDMotion
*************************************************************************//**
*  @class     VMDMotion
*  @brief     VMD Motion Data
*****************************************************************************/
class VMDAnimation
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	

	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/

	/****************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
	VMDAnimation();
	~VMDAnimation();
private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/

};
#endif