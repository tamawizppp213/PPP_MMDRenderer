//////////////////////////////////////////////////////////////////////////////////
///             @file   MotionLoader.hpp
///             @brief  Load Model
///             @author Toide Yutaro
///             @date   2021_05_31
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef MOTION_LOADER_HPP
#define MOTION_LOADER_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "DirectX12/Include/Core/DirectX12Core.hpp"
#include <string>
#include <unordered_map>
#include <memory>
//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////
class VMDFile;
/****************************************************************************
*				  		ModelTable (Singleton)
*************************************************************************//**
*  @class     ModelTableManager
*  @brief     Model Table
*****************************************************************************/
class MotionTableManager
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/

	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/
	std::unordered_map<std::wstring, std::shared_ptr<VMDFile>> MotionTableVMD;

	/***************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/
	static MotionTableManager& Instance()
	{
		static MotionTableManager motionTable;
		return motionTable;
	}
	// Prohibit move and copy.
	MotionTableManager(const MotionTableManager&) = delete;
	MotionTableManager& operator=(const MotionTableManager&) = delete;
	MotionTableManager(MotionTableManager&&) = delete;
	MotionTableManager& operator=(MotionTableManager&&) = delete;
private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/
	MotionTableManager() = default;
	~MotionTableManager() = default;

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/

};

/****************************************************************************
*				  		Model Loader
*************************************************************************//**
*  @class     Model Loader
*  @brief     Model Loader
*****************************************************************************/
class MotionLoader
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/

	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/
	void LoadMotion(const std::wstring& filePath, std::shared_ptr<VMDFile>* vmdData);

	/***************************************************************************
	**                Constructor and Destructor
	*****************************************************************************/

private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/
	MotionTableManager& _motionTableManager = MotionTableManager::Instance();

};
#endif
