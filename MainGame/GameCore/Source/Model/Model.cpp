//////////////////////////////////////////////////////////////////////////////////
///             @file   DirectX12ModelLoader.hpp
///             @brief  Load Model
///             @author Toide Yutaro
///             @date   2020_11_
//////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "GameCore/Include/Model/Model.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////
//                              Implement
//////////////////////////////////////////////////////////////////////////////////
DefaultModel::~DefaultModel() 
{
	_vertexShader = nullptr;
	_pixelShader = nullptr;
	for (auto& buffer : _meshBuffer) { _meshBuffer->Dispose(); }
	_modelObject.get()->Resource()->Release();
};
MeshBuffer& DefaultModel::GetCurrentMeshBuffer()
{
	int frame = DirectX12::Instance().GetCurrentFrameIndex();
	return _meshBuffer[frame];
}