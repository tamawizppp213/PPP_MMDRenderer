//////////////////////////////////////////////////////////////////////////////////
//              Title:  Title.hpp
//            Content:  Title Scene 
//             Author:  Toide Yutaro
//             Create:  2020_11_06
//////////////////////////////////////////////////////////////////////////////////
#pragma once
#ifndef TITLE_HPP
#define TITLE_HPP

//////////////////////////////////////////////////////////////////////////////////
//                             Include
//////////////////////////////////////////////////////////////////////////////////
#include "Scene.hpp"

//////////////////////////////////////////////////////////////////////////////////
//                              Define
//////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
//                           Title Class
//////////////////////////////////////////////////////////////////////////////////
class Title final : public Scene
{
public:
	/****************************************************************************
	**                Public Function
	*****************************************************************************/
	Title();
	~Title();
	void Initialize(GameTimer& gameTimer) override;
	void Draw()       override;
	void Update()     override;
	void Terminate()  override;

	/****************************************************************************
	**                Public Member Variables
	*****************************************************************************/

protected:
	void LoadShaders();
	void LoadGeometry();
	void LoadTextures();
	void BuildPSOs();
	void BuildRootSignature();
	void BuildRenderItem();
	void BuildFrameResources();
	void BuildDescriptorHeap();
	void BuildConstantBufferView();
private:
	/****************************************************************************
	**                Private Function
	*****************************************************************************/
	DirectX12& _directX12 = DirectX12::Instance();

	/****************************************************************************
	**                Private Member Variables
	*****************************************************************************/



};
#endif